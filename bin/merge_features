#!/usr/bin/env python
"""
Copyright 2021 Ronald J. Nowling

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import argparse

import joblib

def parse_args():
    parser = argparse.ArgumentParser()

    parser.add_argument("--merged-features-fl",
                        type=str,
                        required=True)

    parser.add_argument("--features-fls",
                        type=str,
                        nargs="+",)

    return parser.parse_args()

if __name__ == "__main__":
    args = parse_args()

    scaling_before = None
    feature_filter = None
    sample_names = None
    features = None
    num_dimensions = 0
    for model_flname in args.features_fls:
        model = joblib.load(model_flname)
        num_dimensions = max(num_dimensions, model["num_dimensions"])
        scaling_before = model["scaling_before"]

        if feature_filter == None:
            feature_filter = model["feature_filter"]
        else:
            feature_filter = feature_filter.union(model["feature_filter"])

        if sample_names == None:
            sample_names = list(model["sample_names"])
        else:
            for i, sample_name in enumerate(model["sample_names"]):
                if sample_names[i] == None:
                    sample_names[i] = sample_name
                elif sample_names[i] != sample_name:
                    raise Exception("Not all partitions have the same samples in the same order! Can't merge.")

        if features == None:
            features = model["feature_matrix"]
        else:
            features += model["feature_matrix"]

    model = { "feature_matrix" : features,
              "num_dimensions" : num_dimensions,
              "scaling_before" : scaling_before,
              "feature_filter" : feature_filter,
              "sample_names" : sample_names }

    joblib.dump(model,
                args.merged_features_fl)
            
